@model Uniayuda.Models.ForgotPasswordViewModel

@{
    ViewBag.Title = "Reset Password";
}

<h2>Reset Password</h2>

@using (Html.BeginForm("RestorePassword", "Account", FormMethod.Post, new { @id = "ResetPassword-form" })) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Token)
    @Html.HiddenFor(model => model.UserId)

    <div class="form-horizontal">
        <div class="alert alert-danger" role="alert" style="display:none;"></div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RepeatNewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RepeatNewPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RepeatNewPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Change" class="btn btn-default" />
                </div>
            </div>
        }
    </div>
}

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button class="btn btn-default" id="tryResetPassword">Try with another link</button>
        </div>
    </div>
}

@section Scripts{
    <script type="text/javascript">
        (function () {
            var alertMessage = "@Model.ErrorMessage";
            if (alertMessage != "") {
                $(".alert").append(alertMessage);
                $(".alert").show();
                $("#NewPassword").prop('disabled', true);
                $("#RepeatNewPassword").prop('disabled', true);
            }

            $("#tryResetPassword").click(function () {
                showResetPaswordModal();
            });

            $("#ResetPassword-form").submit(function (e) {
                e.preventDefault();
                var form = $("#ResetPassword-form");
                if (form.valid()) {
                    $.ajax({
                        type: "POST",
                        url: form.attr('action'),
                        data: form.serialize(),
                        success: function (data) {
                            var title = "Success";
                            var message = data.Message;
                            var footer = '<button type="button" id="goToLogin" class="btn btn-primary">Login</button>';
                            switch (data.ResponseStatus.toString()) {
                                case "@Entities.Enums.ResponseStatus.Error.GetHashCode()":
                                    title = "Error";
                                    message = "Unexpected error, " + data.Message;
                                    footer = '<button type="button" id="reloadPage" class="btn btn-primary" data-dismiss="modal">Reload</button>';
                                    break;
                            }

                            showModal(title, message, footer);
                            $("#reloadPage").click(function () {
                                if (data.Error == "TOKEN") {
                                    var url = "@Url.Action("ResetPassword", "Account")";
                                    window.location.href = url;
                                } else {
                                    location.reload();
                                }
                            });
                            $("#goToLogin").click(function () {
                                var url = "@Url.Action("Login","Account")";
                                window.location.href = url;
                            });
                        },
                        error: function (data) {
                            console.log("reset Error");
                            console.log(data);
                            showModal("Error", "Unexpected error.", '<button type="button" id="reloadRegister" class="btn btn-primary" data-dismiss="modal">Reload</button>');
                            $("#reloadRegister").click(function () {
                                location.reload();
                            });
                        }
                    });
                }
            })
        })();

        function showResetPaswordModal() {
            $.ajax({
                type: "GET",
                url: "@Url.Action("ShowResetPassword", "Account")",
                success: function (data) {
                    var title = "Reset Password";
                    var message = data;
                    var footer = '<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>' +
                        '<button type="button" id="resetPassAction" class="btn btn-primary">Send</button>';
                    showModal(title, message, footer);

                    $("#resetPassAction").on('click', function () {
                        $("#ResetPass-Form").submit();
                    });

                    $("#ResetPass-Form").submit(function (e) {
                        e.preventDefault();
                        var PassForm = $('#ResetPass-Form');
                        if (PassForm.valid()) {
                            $.ajax({
                                url: PassForm.attr('action'),
                                type: "POST",
                                data: PassForm.serialize(),
                                success: function (data) {
                                    var title = "Email Sended";
                                    var message = data.Message;
                                    var footer = '<button type="button" class="btn btn-primary" data-dismiss="modal">Accept</button>';

                                    switch (data.ResponseStatus.toString()) {
                                        case "@Entities.Enums.ResponseStatus.Warning.GetHashCode()":
                                            title = "Error";
                                            footer = '<button type="button" id="retryResetPassEmail" class="btn btn-primary">Retry</button>';
                                            break;
                                        case "@Entities.Enums.ResponseStatus.Error.GetHashCode()":
                                            title = "Error";
                                            message = "Unexpected error, " + data.Message;
                                            footer = '<button type="button" id="reloadPage" class="btn btn-primary" data-dismiss="modal">Reload</button>';
                                            break;
                                    }

                                    showModal(title, message, footer);
                                    $("#reloadPage").click(function () {
                                        location.reload();
                                    });
                                    $("#retryResetPassEmail").click(function () {
                                        showResetPaswordModal();
                                    });
                                },
                                error: function (data) {
                                    console.log("reset pass Error");
                                    console.log(data);
                                    showModal("Error", "Unexpected error.", '<button type="button" id="reloadPage" class="btn btn-primary" data-dismiss="modal">Reload</button>');
                                    $("#reloadPage").click(function () {
                                        location.reload();
                                    });
                                }
                            });
                        }
                    });
                },
                error: function (data) {
                    console.log("change email Error");
                    console.log(data);
                    showModal("Error", "Unexpected error.", '<button type="button" id="reloadPage" class="btn btn-primary" data-dismiss="modal">Reload</button>');
                    $("#reloadPage").click(function () {
                        location.reload();
                    });
                }
            });
        }
    </script>
}
