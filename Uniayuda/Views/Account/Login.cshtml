@model Uniayuda.Models.LoginViewModel

@{
    ViewBag.Title = "Login";
}

<h2>Login</h2>


@using (Html.BeginForm("LoginUser", "Account", FormMethod.Post, new { @id = "Login-form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <div class="alert" role="alert" style="display:none;"></div>
        <div class="form-group">
            @Html.LabelFor(model => model.UsernameEmail, htmlAttributes: new { @class = "col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UsernameEmail, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email or Username" } })
                @Html.ValidationMessageFor(model => model.UsernameEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Password" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-2">
                <input type="submit" value="Login" class="btn btn-default" />
            </div>
            <div class="col-md-2">
                <a href="javascript:showResetPaswordModal()">Forgot password?</a>
            </div>
        </div>
    </div>
}

@section Scripts{
    <script type="text/javascript">
        (function () {
            var alertMessage = "@Model.statusMessage";
            var alertClass = "";
            var showAlert = true;
            switch ("@Model.statusCode") {
                case "@Entities.Enums.ResponseStatus.None.GetHashCode()":
                    showAlert = false;
                    break;
                case "@Entities.Enums.ResponseStatus.Success.GetHashCode()":
                    alertMessage = "<strong>Ready!</strong> " + alertMessage;
                    alertClass = "alert-success";
                    break;
                case "@Entities.Enums.ResponseStatus.Warning.GetHashCode()":
                    alertClass = "alert-warning";
                    break;
                case "@Entities.Enums.ResponseStatus.Error.GetHashCode()":
                    alertMessage = "<strong>Error!</strong> " + alertMessage;
                    alertClass = "alert-danger";
                    break;
                default:
            }
            if (showAlert) {
                $(".alert").addClass(alertClass);
                $(".alert").append(alertMessage);
                $(".alert").show();
            }

            $("#Login-form").on("submit", function (e) {
                e.preventDefault();
                var form = $("#Login-form");
                if (form.valid()) {
                    $.ajax({
                        type: "POST",
                        url: form.attr('action'),
                        data: form.serialize(),
                        success: function (data) {
                            var message = data.Message;
                            var footer = '<button type="button" class="btn btn-primary" data-dismiss="modal">Accept</button>';
                            var showInfoModal = true;
                            switch (data.ResponseStatus.toString()) {
                                case "@Entities.Enums.ResponseStatus.Success.GetHashCode()":
                                    showInfoModal = false;
                                    var url = "@Url.Action("Index","Account")";
                                    window.location.href = url;
                                    break;
                                case "@Entities.Enums.ResponseStatus.Warning.GetHashCode()":
                                    if (data.Error == "ACCOUNT") {
                                        footer = '<button type="button" class="btn btn-secondary" data-dismiss="modal">Retry</button >' +
                                            '<button type="button" id="goToRegisterPage" class="btn btn-primary">Register</button>';
                                    }
                                    break;
                                case "@Entities.Enums.ResponseStatus.Error.GetHashCode()":
                                    message = "Unexpected error, " + data.Message;
                                    footer = '<button type="button" id="reloadRegister" class="btn btn-primary" data-dismiss="modal">Reload</button>';
                                    break;
                            }
                            if (showInfoModal) {
                                showModal("Error", message, footer);
                                $("#reloadRegister").click(function () {
                                    location.reload();
                                });
                                $("#goToRegisterPage").click(function () {
                                    console.log("login");
                                    var url = "@Url.Action("Register","Account")";
                                    window.location.href = url;
                                });
                            }
                        },
                        error: function (data) {
                            console.log("Login Error");
                            console.log(data);
                            showModal("Error", "Unexpected error.", '<button type="button" id="reloadRegister" class="btn btn-primary" data-dismiss="modal">Reload</button>');
                            $("#reloadRegister").click(function () {
                                location.reload();
                            });
                        }
                    });
                }
            });
        })();

        function showResetPaswordModal() {
            $.ajax({
                type: "GET",
                url: "@Url.Action("ShowResetPassword", "Account")",
                success: function (data) {
                    var title = "Reset Password";
                    var message = data;
                    var footer = '<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>' +
                        '<button type="button" id="resetPassAction" class="btn btn-primary">Send</button>';
                    showModal(title, message, footer);

                    $("#resetPassAction").on('click', function () {
                        $("#ResetPass-Form").submit();
                    });

                    $("#ResetPass-Form").submit(function (e) {
                        e.preventDefault();
                        var PassForm = $('#ResetPass-Form');
                        if (PassForm.valid()) {
                            $.ajax({
                                url: PassForm.attr('action'),
                                type: "POST",
                                data: PassForm.serialize(),
                                success: function (data) {
                                    var title = "Email Sended";
                                    var message = data.Message;
                                    var footer = '<button type="button" class="btn btn-primary" data-dismiss="modal">Accept</button>';

                                    switch (data.ResponseStatus.toString()) {
                                        case "@Entities.Enums.ResponseStatus.Warning.GetHashCode()":
                                            title = "Error";
                                            footer = '<button type="button" id="retryResetPassEmail" class="btn btn-primary">Retry</button>';
                                            break;
                                        case "@Entities.Enums.ResponseStatus.Error.GetHashCode()":
                                            title = "Error";
                                            message = "Unexpected error, " + data.Message;
                                            footer = '<button type="button" id="reloadPage" class="btn btn-primary" data-dismiss="modal">Reload</button>';
                                            break;
                                    }

                                    showModal(title, message, footer);
                                    $("#reloadPage").click(function () {
                                        location.reload();
                                    });
                                    $("#retryResetPassEmail").click(function () {
                                        showResetPaswordModal();
                                    });
                                },
                                error: function (data) {
                                    console.log("reset pass Error");
                                    console.log(data);
                                    showModal("Error", "Unexpected error.", '<button type="button" id="reloadPage" class="btn btn-primary" data-dismiss="modal">Reload</button>');
                                    $("#reloadPage").click(function () {
                                        location.reload();
                                    });
                                }
                            });
                        }
                    });
                },
                error: function (data) {
                    console.log("change email Error");
                    console.log(data);
                    showModal("Error", "Unexpected error.", '<button type="button" id="reloadPage" class="btn btn-primary" data-dismiss="modal">Reload</button>');
                    $("#reloadPage").click(function () {
                        location.reload();
                    });
                }
            });
        }
    </script>
}
