@model Uniayuda.Models.ChangePasswordViewModel

@{
    ViewBag.Title = "Settings";
}

<h2>Settings</h2>

<h4>Change Email</h4>
<div>
    @Html.Partial("_changeEmail")
</div>

@using (Html.BeginForm("ChangePassWord", "Account", FormMethod.Post, new { id = "ChangePassword-Form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Change Password</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CurrentPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CurrentPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RepeatNewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RepeatNewPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RepeatNewPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Change Password" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back", "Index")
</div>

@section Scripts{
    <script>
        (function () {
            $("#ChangeEmail-Form").submit(function (e) {
                e.preventDefault();
                var EmailForm = $('#ChangeEmail-Form');
                if (EmailForm.valid()) {
                    $.ajax({
                        url: EmailForm.attr('action'),
                        type: "POST",
                        data: EmailForm.serialize(),
                        success: function (data) {
                            var title = "Email resended";
                            var message = data.Message;
                            var footer = '<button type="button" id="reloadPage" class="btn btn-primary" data-dismiss="modal">Accept</button>';

                            switch (data.ResponseStatus.toString()) {
                                case "@Entities.Enums.ResponseStatus.Success.GetHashCode()":
                                    $("#Email").val("");
                                    $("#RepeatEmail").val("");
                                    $("#Password").val("");
                                    break;
                                case "@Entities.Enums.ResponseStatus.Warning.GetHashCode()":
                                    title = "Error";
                                    footer = '<button type="button" class="btn btn-primary" data-dismiss="modal">Retry</button>';
                                    break;
                                case "@Entities.Enums.ResponseStatus.Error.GetHashCode()":
                                    title = "Error";
                                    message = "Unexpected error, " + data.Message;
                                    footer = '<button type="button" id="reloadPage" class="btn btn-primary" data-dismiss="modal">Reload</button>';
                                    break;
                            }

                            showModal(title, message, footer);
                            $("#reloadPage").click(function () {
                                location.reload();
                            });
                        },
                        error: function (data) {
                            console.log("change pass Error");
                            console.log(data);
                            showModal("Error", "Unexpected error.", '<button type="button" id="reloadPage" class="btn btn-primary" data-dismiss="modal">Reload</button>');
                            $("#reloadPage").click(function () {
                                location.reload();
                            });
                            return null;
                        }
                    });
                }
            });

            $("#ChangePassword-Form").submit(function (e) {
                e.preventDefault();
                var PasswordForm = $('#ChangePassword-Form');
                if (PasswordForm.valid()) {
                    $.ajax({
                        url: PasswordForm.attr('action'),
                        type: "POST",
                        data: PasswordForm.serialize(),
                        success: function (data) {
                            var title = "Password Changed";
                            var message = data.Message;
                            var footer = '<button type="button" class="btn btn-primary" data-dismiss="modal">Accept</button>';

                            switch (data.ResponseStatus.toString()) {
                                case "@Entities.Enums.ResponseStatus.Success.GetHashCode()":
                                    $("#CurrentPassword").val("");
                                    $("#NewPassword").val("");
                                    $("#RepeatNewPassword").val("");
                                    break;
                                case "@Entities.Enums.ResponseStatus.Warning.GetHashCode()":
                                    title = "Error";
                                    footer = '<button type="button" class="btn btn-primary" data-dismiss="modal">Retry</button>';
                                    break;
                                case "@Entities.Enums.ResponseStatus.Error.GetHashCode()":
                                    title = "Error";
                                    message = "Unexpected error, " + data.Message;
                                    footer = '<button type="button" id="reloadPage" class="btn btn-primary" data-dismiss="modal">Reload</button>';
                                    break;
                            }

                            showModal(title, message, footer);
                            $("#reloadPage").click(function () {
                                location.reload();
                            });
                        },
                        error: function (data) {
                            console.log("change pass Error");
                            console.log(data);
                            showModal("Error", "Unexpected error.", '<button type="button" id="reloadPage" class="btn btn-primary" data-dismiss="modal">Reload</button>');
                            $("#reloadPage").click(function () {
                                location.reload();
                            });
                            return null;
                        }
                    });
                }
            });
        })();
    </script>
}
